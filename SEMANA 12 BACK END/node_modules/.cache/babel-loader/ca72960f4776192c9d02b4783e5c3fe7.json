{"ast":null,"code":"var _jsxFileName = \"/Users/nr/Desktop/ESTUDIOS/Cosas curso Adalab NR drive NRM/mod react/modulo-3-leccion-2.4-ejercicio-01-El contador/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/App.css'; // Importamos useState desde React\n\nimport { useState } from 'react'; // Creamos la función o componente App con una función arrow.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // Creo constante de estado counter y la función para modificarla setCounter.\n  // El valor inicial que va a tener counter es 0.\n  const [counter, setCounter] = useState(0); // Creo una función manejadora que se ejecutará cuando se cambie el input\n\n  const handleInput = ev => {\n    // Cogemos el valor del input\n    const inputValue = ev.target.value;\n    console.log('HOLA'); // Ejecutamos la función setCounter para actualizar el valor del estado de counter\n    // Cuando ejecutamos la función setCounter, React guarda el valor del input en la constante counter y re-renderiza la página.\n\n    setCounter(inputValue);\n  }; // Retornamos todo el código HTML que queremos que React pinte en la página.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Contador: \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: \"+1\",\n        type: \"button\",\n        name: \"button\",\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nr/Desktop/ESTUDIOS/Cosas curso Adalab NR drive NRM/mod react/modulo-3-leccion-2.4-ejercicio-01-El contador/src/components/App.js"],"names":["useState","App","counter","setCounter","handleInput","ev","inputValue","target","value","console","log"],"mappings":";;;AAAA,OAAO,mBAAP,C,CACA;;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CAAD,CAAtC,CAHgB,CAKhB;;AACA,QAAMI,WAAW,GAAIC,EAAD,IAAQ;AAC1B;AACA,UAAMC,UAAU,GAAGD,EAAE,CAACE,MAAH,CAAUC,KAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAH0B,CAI1B;AACA;;AAEAP,IAAAA,UAAU,CAACG,UAAD,CAAV;AACD,GARD,CANgB,CAgBhB;;;AACA,sBACE;AAAA,4BACE;AAAA,+BAAeJ,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BAEE;AAAO,QAAA,KAAK,EAAC,IAAb;AAAkB,QAAA,IAAI,EAAC,QAAvB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAA8C,QAAA,QAAQ,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1BD;;GAAMH,G;;KAAAA,G;AA4BN,eAAeA,GAAf","sourcesContent":["import '../styles/App.css';\n// Importamos useState desde React\nimport { useState } from 'react';\n\n// Creamos la función o componente App con una función arrow.\nconst App = () => {\n  // Creo constante de estado counter y la función para modificarla setCounter.\n  // El valor inicial que va a tener counter es 0.\n  const [counter, setCounter] = useState(0);\n\n  // Creo una función manejadora que se ejecutará cuando se cambie el input\n  const handleInput = (ev) => {\n    // Cogemos el valor del input\n    const inputValue = ev.target.value;\n    console.log('HOLA');\n    // Ejecutamos la función setCounter para actualizar el valor del estado de counter\n    // Cuando ejecutamos la función setCounter, React guarda el valor del input en la constante counter y re-renderiza la página.\n\n    setCounter(inputValue);\n  };\n\n  // Retornamos todo el código HTML que queremos que React pinte en la página.\n  return (\n    <div>\n      <h1>Contador: {counter}</h1>\n      <form>\n        {/* En esta línea indicamos que cuando cambie el input se ejecute la función manejadora handleInput */}\n        <input value=\"+1\" type=\"button\" name=\"button\" onChange={handleInput} />\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}