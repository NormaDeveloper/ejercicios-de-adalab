{"ast":null,"code":"var _jsxFileName = \"/Users/nr/Desktop/ADALAB/ejercicios-de-adalab/SEMANA 9 REACT/modulo-3-leccion-2.4-ejercicio-01-El contador/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/App.css';\nimport { useState } from 'react'; //Importamos useState desde React\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [number, setNumber] = useState(0); //4- variable contador\n\n  let counter = 0; //3- creo función manejadora del botón incrementar\n\n  const handleIncrement = () => {\n    //5- añado al contador el number +1\n    counter = number + 1; //6- ejecuto setNumber para actualizar el valor del estado number\n    // React guarda el valor del counter en la constante number\n\n    setNumber(counter);\n  };\n\n  const handleDecrement = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Contador: \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncrement,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDecrement,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"G5PFX1wnjBJODPcJAktOglW1raM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nr/Desktop/ADALAB/ejercicios-de-adalab/SEMANA 9 REACT/modulo-3-leccion-2.4-ejercicio-01-El contador/src/components/App.js"],"names":["useState","App","number","setNumber","counter","handleIncrement","handleDecrement"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAAkC;;;;AAElC,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAD,CAApC,CADgB,CAEhB;;AACA,MAAII,OAAO,GAAG,CAAd,CAHgB,CAIhB;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC5B;AACAD,IAAAA,OAAO,GAAGF,MAAM,GAAG,CAAnB,CAF4B,CAI5B;AACA;;AACAC,IAAAA,SAAS,CAACC,OAAD,CAAT;AACD,GAPD;;AASA,QAAME,eAAe,GAAG,MAAM,CAAE,CAAhC;;AAEA,sBACE;AAAA,4BAEE;AAAA,+BAAeJ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAQ,MAAA,OAAO,EAAEG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzBD;;GAAML,G;;KAAAA,G;AA2BN,eAAeA,GAAf","sourcesContent":["import '../styles/App.css';\nimport { useState } from 'react'; //Importamos useState desde React\n\nconst App = () => {\n  const [number, setNumber] = useState(0);\n  //4- variable contador\n  let counter = 0;\n  //3- creo función manejadora del botón incrementar\n  const handleIncrement = () => {\n    //5- añado al contador el number +1\n    counter = number + 1;\n\n    //6- ejecuto setNumber para actualizar el valor del estado number\n    // React guarda el valor del counter en la constante number\n    setNumber(counter);\n  };\n\n  const handleDecrement = () => {};\n\n  return (\n    <div>\n      {/* 1- creo texto y le pongo la const */}\n      <h2>Contador: {number}</h2>\n      {/* 2 - añado botón. Y le pongo evento y función handle al botón */}\n      <button onClick={handleIncrement}>+</button>\n      <button onClick={handleDecrement}>-</button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}