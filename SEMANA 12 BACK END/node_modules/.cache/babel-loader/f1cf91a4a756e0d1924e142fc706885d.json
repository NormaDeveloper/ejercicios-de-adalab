{"ast":null,"code":"var _jsxFileName = \"/Users/nr/Desktop/ESTUDIOS/Cosas curso Adalab NR drive NRM/mod react/modulo-3-leccion-2.4-ejercicio-01-El contador/src/components/App.js\";\nimport '../styles/App.css'; // Importamos useState desde React\n\nimport { useState } from 'react';\nimport '../styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App; // // Creamos la función o componente App con una función arrow.\n// const App = () => {\n//   let counter = 0;\n//   // Creo constante de estado counter y la función para modificarla setCounter.\n//   // El valor inicial que va a tener counter es 0.\n//   const [counter, setCounter] = useState(0);\n//   // Creo una función manejadora que se ejecutará cuando se cambie el input\n//   const handleInput = (ev) => {\n//     // Cogemos el valor del input\n//     const inputValue = ev.target.value;\n//     console.log('HOLA');\n//     // Ejecutamos la función setCounter para actualizar el valor del estado de counter\n//     // Cuando ejecutamos la función setCounter, React guarda el valor del input en la constante counter y re-renderiza la página.\n//     setCounter(inputValue);\n//   };\n//   // Retornamos todo el código HTML que queremos que React pinte en la página.\n//   return (\n//     <div>\n//       <h1>Contador: {counter}</h1>\n//       <form>\n//         {/* En esta línea indicamos que cuando cambie el input se ejecute la función manejadora handleInput */}\n//         <input value=\"+1\" type=\"button\" name=\"button\" onChange={handleInput} />\n//       </form>\n//     </div>\n//   );\n// };\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nr/Desktop/ESTUDIOS/Cosas curso Adalab NR drive NRM/mod react/modulo-3-leccion-2.4-ejercicio-01-El contador/src/components/App.js"],"names":["useState","App"],"mappings":";AAAA,OAAO,mBAAP,C,CACA;;AACA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMA,G;AAQN,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import '../styles/App.css';\n// Importamos useState desde React\nimport { useState } from 'react';\n\nimport '../styles/App.css';\n\nconst App = () => {\n  return (\n    <div>\n      <h2>Contador</h2>\n    </div>\n  );\n};\n\nexport default App;\n\n// // Creamos la función o componente App con una función arrow.\n// const App = () => {\n//   let counter = 0;\n//   // Creo constante de estado counter y la función para modificarla setCounter.\n//   // El valor inicial que va a tener counter es 0.\n//   const [counter, setCounter] = useState(0);\n\n//   // Creo una función manejadora que se ejecutará cuando se cambie el input\n//   const handleInput = (ev) => {\n//     // Cogemos el valor del input\n//     const inputValue = ev.target.value;\n//     console.log('HOLA');\n//     // Ejecutamos la función setCounter para actualizar el valor del estado de counter\n//     // Cuando ejecutamos la función setCounter, React guarda el valor del input en la constante counter y re-renderiza la página.\n\n//     setCounter(inputValue);\n//   };\n\n//   // Retornamos todo el código HTML que queremos que React pinte en la página.\n//   return (\n//     <div>\n//       <h1>Contador: {counter}</h1>\n//       <form>\n//         {/* En esta línea indicamos que cuando cambie el input se ejecute la función manejadora handleInput */}\n//         <input value=\"+1\" type=\"button\" name=\"button\" onChange={handleInput} />\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}