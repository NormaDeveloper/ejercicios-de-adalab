{"ast":null,"code":"var _jsxFileName = \"/Users/nr/Desktop/ADALAB/ejercicios-de-adalab/SEMANA 9 REACT/modulo-3-leccion-2.4-ejercicio-02-Dark mode/src/components/App.js\",\n    _s = $RefreshSig$();\n\n// 1. El contador\n// Vamos a crear un contador incremental. Para ello necesitamos combinar lo que hemos aprendido sobre el estado y los eventos de React. Sigue los siguientes pasos:\n// Crea un nuevo proyecto a partir de tu React starter kit.\n// Añade el texto: Contador: 0.\n// Añade un botón a tu página que al pulsarlo incremente el valor del texto para que ponga Contador: 1.\n// Añade otra funcionalidad que quieras como por ejemplo:\n// Un botón para decrementar el contador.\n// Un botón para resetear el contador.\nimport '../styles/App.css';\nimport { useState } from 'react'; //Importamos useState desde React\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [number, setNumber] = useState(0); //4- variable contador\n\n  let counter = 0; //3- creo función manejadora del botón incrementar\n\n  const handleIncrement = () => {\n    //5- añado al contador el number +1\n    counter = number + 1; //6- ejecuto setNumber para actualizar el valor del estado number\n    // React guarda el valor del counter en la constante number\n\n    setNumber(counter);\n  };\n\n  const handleDecrement = () => {\n    counter = number - 1;\n    setNumber(counter);\n  };\n\n  const handleReset = () => {\n    counter = 0;\n    setNumber(counter);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Contador: \", number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncrement,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDecrement,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"G5PFX1wnjBJODPcJAktOglW1raM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nr/Desktop/ADALAB/ejercicios-de-adalab/SEMANA 9 REACT/modulo-3-leccion-2.4-ejercicio-02-Dark mode/src/components/App.js"],"names":["useState","App","number","setNumber","counter","handleIncrement","handleDecrement","handleReset"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAAkC;;;;AAElC,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,QAAQ,CAAC,CAAD,CAApC,CADgB,CAEhB;;AACA,MAAII,OAAO,GAAG,CAAd,CAHgB,CAIhB;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC5B;AACAD,IAAAA,OAAO,GAAGF,MAAM,GAAG,CAAnB,CAF4B,CAI5B;AACA;;AACAC,IAAAA,SAAS,CAACC,OAAD,CAAT;AACD,GAPD;;AASA,QAAME,eAAe,GAAG,MAAM;AAC5BF,IAAAA,OAAO,GAAGF,MAAM,GAAG,CAAnB;AACAC,IAAAA,SAAS,CAACC,OAAD,CAAT;AACD,GAHD;;AAKA,QAAMG,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,GAAG,CAAV;AACAD,IAAAA,SAAS,CAACC,OAAD,CAAT;AACD,GAHD;;AAKA,sBACE;AAAA,4BAEE;AAAA,+BAAeF,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAQ,MAAA,OAAO,EAAEG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAQ,MAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAQ,MAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAlCD;;GAAMN,G;;KAAAA,G;AAoCN,eAAeA,GAAf","sourcesContent":["// 1. El contador\n// Vamos a crear un contador incremental. Para ello necesitamos combinar lo que hemos aprendido sobre el estado y los eventos de React. Sigue los siguientes pasos:\n// Crea un nuevo proyecto a partir de tu React starter kit.\n// Añade el texto: Contador: 0.\n// Añade un botón a tu página que al pulsarlo incremente el valor del texto para que ponga Contador: 1.\n// Añade otra funcionalidad que quieras como por ejemplo:\n// Un botón para decrementar el contador.\n// Un botón para resetear el contador.\n\nimport '../styles/App.css';\nimport { useState } from 'react'; //Importamos useState desde React\n\nconst App = () => {\n  const [number, setNumber] = useState(0);\n  //4- variable contador\n  let counter = 0;\n  //3- creo función manejadora del botón incrementar\n  const handleIncrement = () => {\n    //5- añado al contador el number +1\n    counter = number + 1;\n\n    //6- ejecuto setNumber para actualizar el valor del estado number\n    // React guarda el valor del counter en la constante number\n    setNumber(counter);\n  };\n\n  const handleDecrement = () => {\n    counter = number - 1;\n    setNumber(counter);\n  };\n\n  const handleReset = () => {\n    counter = 0;\n    setNumber(counter);\n  };\n\n  return (\n    <div>\n      {/* 1- creo texto y le pongo la const */}\n      <h2>Contador: {number}</h2>\n      {/* 2 - añado botón. Y le pongo evento y función handle al botón */}\n      <button onClick={handleIncrement}>+</button>\n      <button onClick={handleDecrement}>-</button>\n      <button onClick={handleReset}>Reset</button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}