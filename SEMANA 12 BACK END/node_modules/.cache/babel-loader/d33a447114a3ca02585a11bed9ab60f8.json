{"ast":null,"code":"var _jsxFileName = \"/Users/nr/Desktop/ADALAB/ejercicios-de-adalab/SEMANA 9 REACT/modulo-3-leccion-2.4-ejercicio-02-Dark mode/src/components/App.js\";\n// 2. Dark mode\n// Ahora vamos a programar la típica funcionalidad del dark mode. Para ello:\n// Crea un proyecto con los siguientes contenidos:\n// Un botón con el texto \"Des / activar el dark mode\".\n// Un párrafo con el texto \"Tienes activado el dark mode\".\n// Un texto cualquiera de relleno con lorem ipsum.\n// Añade la funcionalidad para que toda la página funcione correctamente. Cada vez que la usuaria pulse en el botón \"Des / activar el dark mode\" debes:\n// Invertir el valor de una constante del estado de React.\n// Repintar la página añadiendo una clase CSS en el <div /> principal del componente:\n// Añade estilos en tu CSS / Sass que cambien los colores de la página.\n// Si quieres puedes utilizar los estilos filter para invertir los colores de la página.\n// Repintar el párrafo \"Tienes activado el dark mode\" para que des / aparezca:\n// Crea una función que se llame renderDarkModeText().\n// Esta función debe comprobar el valor del estado de React.\n// Esta función debe retornar un párrafo en JSX si el dark mode está activo.\n// Esta función debe retornar un null si el dark mode no está activo.\n// Debes llamar a esta función desde el retorno de tu componente.\nimport '../styles/App.css';\nimport { useState } from 'react'; //Importamos useState desde React\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  // const [number, setNumber] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Des / activar el dark mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Tienes activado el dark mode \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"darkMode\",\n      children: \"Lorem, ipsum dolor sit amet consectetur adipisicing elit. Saepe, dignissimos similique cum ex quod dolor esse quia neque debitis. Eveniet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nr/Desktop/ADALAB/ejercicios-de-adalab/SEMANA 9 REACT/modulo-3-leccion-2.4-ejercicio-02-Dark mode/src/components/App.js"],"names":["useState","App"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,mBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAAkC;;;;AAElC,MAAMC,GAAG,GAAG,MAAM;AAChB;AAEA,sBACE;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;KAAMA,G;AAiBN,eAAeA,GAAf","sourcesContent":["// 2. Dark mode\n// Ahora vamos a programar la típica funcionalidad del dark mode. Para ello:\n// Crea un proyecto con los siguientes contenidos:\n// Un botón con el texto \"Des / activar el dark mode\".\n// Un párrafo con el texto \"Tienes activado el dark mode\".\n// Un texto cualquiera de relleno con lorem ipsum.\n// Añade la funcionalidad para que toda la página funcione correctamente. Cada vez que la usuaria pulse en el botón \"Des / activar el dark mode\" debes:\n// Invertir el valor de una constante del estado de React.\n// Repintar la página añadiendo una clase CSS en el <div /> principal del componente:\n// Añade estilos en tu CSS / Sass que cambien los colores de la página.\n// Si quieres puedes utilizar los estilos filter para invertir los colores de la página.\n// Repintar el párrafo \"Tienes activado el dark mode\" para que des / aparezca:\n// Crea una función que se llame renderDarkModeText().\n// Esta función debe comprobar el valor del estado de React.\n// Esta función debe retornar un párrafo en JSX si el dark mode está activo.\n// Esta función debe retornar un null si el dark mode no está activo.\n// Debes llamar a esta función desde el retorno de tu componente.\n\nimport '../styles/App.css';\nimport { useState } from 'react'; //Importamos useState desde React\n\nconst App = () => {\n  // const [number, setNumber] = useState(0);\n\n  return (\n    <div>\n      {/* 1 - Añado botón. Y le pongo evento y función handle al botón  onClick={handleIncrement}*/}\n      <button>Des / activar el dark mode</button>\n      <p>Tienes activado el dark mode </p>\n      <p className=\"darkMode\">\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Saepe,\n        dignissimos similique cum ex quod dolor esse quia neque debitis.\n        Eveniet.\n      </p>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}